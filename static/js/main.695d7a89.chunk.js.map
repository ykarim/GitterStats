{"version":3,"sources":["components/Form.js","components/Repos.js","components/Profile.js","App.js","registerServiceWorker.js","index.js"],"names":["Form","react_default","a","createElement","className","onSubmit","this","props","getUserData","type","name","placeholder","aria-label","React","Component","library","add","faStar","faEye","faCodeBranch","Repos","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","generateLanguageBreakdownList","repo","languageItems","push","key","language_breakdown","forEach","value","repoStates","i","repos","length","state","repoDetailsShown","toggleRepoDetails","bind","assertThisInitialized","repoKey","currentRepoStates","setState","_this2","RepoDivs","map","data-repokey","onClick","href","url","description","stars","react_fontawesome_index_es","icon","watchers","forks","created","pushed","Profile","error","role","user","src","avatar","alt","username","bio","repo_count","followers","following","updated","topLanguage","secondTopLanguage","components_Repos","App","undefined","_callee","e","userBioData","userRepoData","userTopLanguages","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","getUserBioInfo","sent","getUserRepoInfo","userLanguageMap","analyzeUserLanguages","getUserTopLanguages","stop","_callee2","api_call","data","_context2","fetch","concat","json","id","abrupt","avatar_url","login","html_url","public_repos","Date","created_at","toLocaleString","updated_at","message","_callee3","_context3","element","pushed_at","language","languages_url","forks_count","open_issues","open_issues_count","stargazers_count","watchers_count","analyzeRepoLanguages","_ref4","asyncToGenerator","mark","_callee4","languageData","languageMap","totalLines","_context4","Map","hasOwnProperty","set","toFixed","_x4","apply","arguments","languageFrequencies","has","currentFrequency","get","firstMostUsedLanguage","secondMostUsedLanguage","firstMostUsedFreq","secondMostUsedFreq","languageFreq","languageElement","components_Form","components_Profile","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.695d7a89.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n    render () {\r\n        return (\r\n            <form className=\"form-inline\" onSubmit={this.props.getUserData}>\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" name=\"username\" placeholder=\"Username...\"\r\n                    aria-label=\"Search Username\" />\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport '../css/Repos.css'\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCodeBranch, faEye, faStar} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faStar);\r\nlibrary.add(faEye);\r\nlibrary.add(faCodeBranch);\r\n\r\nclass Repos extends React.Component {\r\n\r\n    generateLanguageBreakdownList = (repo) => {\r\n        let languageItems = [];\r\n\r\n        languageItems.push(\r\n            <span key=\"languagelistDesc\" className=\"list-inline-item languageListHeader\">Languages: </span>\r\n        );\r\n        repo.language_breakdown.forEach(function (value, key) {\r\n            languageItems.push(<li key={key} className=\"list-inline-item languageListItem\">{key + \" \" + value}</li>);\r\n        });\r\n\r\n        return <ul className=\"list-inline languageList\">{languageItems}</ul>;\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const repoStates = [];\r\n        for (let i = 0; i < props.repos.length; i++) {\r\n            repoStates.push(false);\r\n        }\r\n\r\n        this.state = {\r\n            repoDetailsShown: repoStates,\r\n        };\r\n\r\n        this.toggleRepoDetails = this.toggleRepoDetails.bind(this);\r\n    }\r\n\r\n    toggleRepoDetails(repoKey) {\r\n        let currentRepoStates = this.state.repoDetailsShown;\r\n        currentRepoStates[repoKey] = !currentRepoStates[repoKey];\r\n\r\n        this.setState({\r\n            repoDetailsShown: currentRepoStates,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const RepoDivs = this.props.repos.map((repo, repoKey) =>\r\n            <div className=\"repoElement\" key={repoKey} data-repokey={repoKey} onClick={() => this.toggleRepoDetails(repoKey)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <a href={repo.url}>{repo.name}</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row repoStats\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Stars: {repo.stars} <FontAwesomeIcon icon=\"star\" className=\"starIcon\"/></h5>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Watchers: {repo.watchers} <FontAwesomeIcon icon=\"eye\" className=\"eyeIcon\"/></h5>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Forks: {repo.forks} <FontAwesomeIcon icon=\"code-branch\" className=\"codeBranchIcon\"/></h5>\r\n                    </div>\r\n                </div>\r\n\r\n                { this.state.repoDetailsShown[repoKey] &&\r\n                    <div>\r\n                        <hr />\r\n\r\n                        <div className=\"row repoStats\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h4>{repo.created}</h4>\r\n                                <p>Created On</p>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h4>{repo.pushed}</h4>\r\n                                <p>Last Updated On</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row repoStats\">\r\n                            <div className=\"col-sm-12\">\r\n                                {this.generateLanguageBreakdownList(repo)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>{RepoDivs}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Repos;","import React from \"react\";\r\nimport \"../css/Profile.css\"\r\nimport Repos from \"./Repos\";\r\n\r\nclass Profile extends React.Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        {this.props.error &&\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {this.props.error}\r\n                            </div>\r\n                        }\r\n\r\n                        {this.props.user ? (\r\n                            <div>\r\n                                <img src={this.props.user.avatar} alt=\"User Profile\" className=\"rounded-circle profileImg\"/>\r\n\r\n                                <h3>\r\n                                    {this.props.user.name} (<a href={this.props.user.url}>{this.props.user.username}</a>)\r\n                                </h3>\r\n                                <p>{this.props.user.bio}</p>\r\n\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <h1>Welcome to GitBio!</h1>\r\n                                <p>Get detailed GitHub user information, statistics, and more...</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                { this.props.user &&\r\n                    <div className=\"row numericalData\">\r\n                        <div className=\"col-sm-4\">\r\n                            <h4>{this.props.user.repo_count}</h4>\r\n                            <p className=\"caption\">Repositories</p>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <h4>{this.props.user.followers}</h4>\r\n                            <p className=\"caption\">Followers</p>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <h4>{this.props.user.following}</h4>\r\n                            <p className=\"caption\">Following</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                { this.props.user &&\r\n                    <div className=\"row numericalData\">\r\n                        <div className=\"col-sm-6\">\r\n                            <h4>{this.props.user.created}</h4>\r\n                            <p className=\"caption\">Created On</p>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <h4>{this.props.user.updated}</h4>\r\n                            <p className=\"caption\">Updated On</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.props.user &&\r\n                <div className=\"row numericalData\">\r\n                    <div className=\"col-sm-6\">\r\n                        <h4>{this.props.user.topLanguage}</h4>\r\n                        <p className=\"caption\">Most Used Language</p>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <h4>{this.props.user.secondTopLanguage}</h4>\r\n                        <p className=\"caption\">Second Most Used Language</p>\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n                { this.props.repos &&\r\n                    <Repos repos={this.props.repos}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Form from \"./components/Form\";\r\nimport Profile from \"./components/Profile\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        user: undefined,\r\n        repos: undefined,\r\n        error: undefined\r\n    };\r\n\r\n    getUserData = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const username = e.target.elements.username.value;\r\n        if (username) {\r\n            const userBioData = await this.getUserBioInfo(username);\r\n            if (userBioData.username) {\r\n                let userRepoData = await this.getUserRepoInfo(username);\r\n\r\n                //Add user's language frequency map to user data\r\n                userBioData.userLanguageMap = this.analyzeUserLanguages(userRepoData);\r\n\r\n                //Get user's top two languages and add to user data\r\n                let userTopLanguages = this.getUserTopLanguages(userBioData.userLanguageMap);\r\n                userBioData.topLanguage = userTopLanguages[0];\r\n                userBioData.secondTopLanguage = userTopLanguages[1];\r\n\r\n                this.setState({\r\n                    user: userBioData,\r\n                    repos: userRepoData,\r\n                    error: \"\"\r\n                });\r\n            } else {\r\n                //User doesn't exist\r\n                this.setState({\r\n                    user: undefined,\r\n                    repos: undefined,\r\n                    error: userBioData.error\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                user: undefined,\r\n                repos: undefined,\r\n                error: \"Please enter username\"\r\n            });\r\n        }\r\n    };\r\n\r\n    getUserBioInfo = async (username) => {\r\n        const api_call = await fetch(`https://api.github.com/users/${username}`);\r\n        const data = await api_call.json();\r\n\r\n        if (data.id) {\r\n\r\n            return {\r\n                avatar: data.avatar_url,\r\n                name: data.name,\r\n                username: data.login,\r\n                url: data.html_url,\r\n                bio: data.bio,\r\n                type: data.type,\r\n                repo_count: data.public_repos,\r\n                followers: data.followers,\r\n                following: data.following,\r\n                created: new Date(data.created_at).toLocaleString(),\r\n                updated: new Date(data.updated_at).toLocaleString(),\r\n            };\r\n        } else {\r\n            return {\r\n                error: data.message\r\n            }\r\n        }\r\n    };\r\n\r\n    getUserRepoInfo = async (username) => {\r\n        const api_call = await fetch(`https://api.github.com/users/${username}/repos`);\r\n        const data = await api_call.json();\r\n\r\n        const repos = [];\r\n\r\n        data.forEach(function(element) {\r\n            repos.push({\r\n                name: element.name,\r\n                url: element.html_url,\r\n                description: element.description,\r\n                created: new Date(element.created_at).toLocaleString(),\r\n                pushed: new Date(element.pushed_at).toLocaleString(),\r\n                language: element.language,\r\n                languages_url: element.languages_url,\r\n                forks: element.forks_count,\r\n                open_issues: element.open_issues_count,\r\n                stars: element.stargazers_count,\r\n                watchers: element.watchers_count\r\n            });\r\n        });\r\n\r\n        this.analyzeRepoLanguages(repos);\r\n        return repos;\r\n    };\r\n\r\n    analyzeRepoLanguages = (userRepoData) => {\r\n        userRepoData.forEach(async function(repo) {\r\n            const api_call = await fetch(repo.languages_url);\r\n            const languageData = await api_call.json();\r\n            const languageMap = new Map();\r\n            let totalLines = 0;\r\n\r\n            //Obtain total number of lines\r\n            for (let language in languageData) {\r\n                if (languageData.hasOwnProperty(language)) {\r\n                    languageMap.set(language, languageData[language]);\r\n                    totalLines += languageData[language];\r\n                }\r\n            }\r\n\r\n            //Set value of language in languageMap equal to string containing percentage rounded to two decimals\r\n            languageMap.forEach(function(value, key) {\r\n                languageMap.set(key, (value / totalLines * 100).toFixed(2) + \"%\");\r\n            });\r\n            repo.language_breakdown = languageMap;\r\n        });\r\n\r\n        return userRepoData;\r\n    };\r\n\r\n    analyzeUserLanguages = (userRepoData) => {\r\n        let languageFrequencies = new Map();\r\n\r\n        userRepoData.forEach(function(repo) {\r\n            if (languageFrequencies.has(repo.language)) {\r\n                const currentFrequency = languageFrequencies.get(repo.language);\r\n                languageFrequencies.set(repo.language, currentFrequency + 1);\r\n            } else {\r\n                languageFrequencies.set(repo.language, 1);\r\n            }\r\n        });\r\n\r\n        return languageFrequencies;\r\n    };\r\n\r\n    getUserTopLanguages = (languageMap) => {\r\n        let firstMostUsedLanguage = \"\", secondMostUsedLanguage = \"\";\r\n        let firstMostUsedFreq = 0, secondMostUsedFreq = 0;\r\n\r\n        languageMap.forEach(function (languageFreq, languageElement) {\r\n            if (languageFreq > firstMostUsedFreq && languageFreq > secondMostUsedFreq) {\r\n                firstMostUsedLanguage = languageElement;\r\n                firstMostUsedFreq = languageFreq;\r\n            } else if (languageFreq < firstMostUsedFreq && languageFreq > secondMostUsedFreq) {\r\n                secondMostUsedLanguage = languageElement;\r\n                secondMostUsedFreq = languageFreq;\r\n            }\r\n        });\r\n\r\n        return [firstMostUsedLanguage, secondMostUsedLanguage];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\">GitBio</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <Form getUserData={this.getUserData}/>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Profile user={this.state.user} repos={this.state.repos} error={this.state.error}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}